# -*- coding: utf-8 -*-
"""data_collection_and_cleaning

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ahh8KJNDwIe9ufC5h2n80hWjC1LXk_8q
"""

import requests
from bs4 import BeautifulSoup
import pandas as pd
import numpy as np
import re


base_urls = [
    'https://www.flipkart.com/clothing-and-accessories/saree-and-accessories/saree/women-saree/pr?sid=clo%2C8on%2Czpd%2C9og&otracker=categorytree&otracker=nmenu_sub_Women_0_Sarees&page={}',
    'https://www.flipkart.com/clothing-and-accessories/ethnic-wear/kurtas/women-kurtas-and-kurtis/pr?sid=clo%2Ccfv%2Ccib%2Crkt&q=kurtas+kurtis&otracker=categorytree&otracker=nmenu_sub_Women_0_Kurtas+%26+Kurtis&page={}',
    'https://www.flipkart.com/clothing-and-accessories/lehenga-choli/women-lehenga-choli/pr?sid=clo%2Chlg%2Cwrp&otracker=categorytree&otracker=nmenu_sub_Women_0_Lehenga+Choli&page={}',
    'https://www.flipkart.com/clothing-and-accessories/ethnic-wear/ethnic-sets/women-ethnic-sets-and-salwar-suits/pr?sid=clo%2Ccfv%2Citg%2Ctys&otracker=categorytree&otracker=nmenu_sub_Women_0_Kurta+Sets+%26+Salwar+Suits&page={}',
    'https://www.flipkart.com/clothing-and-accessories/dresses-and-gown/gown/women-gown/pr?sid=clo%2Codx%2Cod7%2C0xx&otracker=categorytree&otracker=nmenu_sub_Women_0_Gowns&page={}',
    'https://www.flipkart.com/clothing-and-accessories/ethnic-wear/leggings-and-churidar/women-leggings-and-churidar/pr?sid=clo%2Ccfv%2Cht7%2Ccjo&otracker=categorytree&otracker=nmenu_sub_Women_0_Leggings+%26+Churidars&page={}',
    'https://www.flipkart.com/clothing-and-accessories/ethnic-wear/palazzo/pr?sid=clo%2Ccfv%2Cmn6&otracker=categorytree&otracker=nmenu_sub_Women_0_Palazzos&page={}',
    'https://www.flipkart.com/clothing-and-accessories/bottomwear/trouser/women-trouser/pr?sid=clo%2Cvua%2Cmle%2C8ie&otracker=categorytree&p%5B%5D=facets.suitable_for%255B%255D%3DEthnic%2BWear&p%5B%5D=facets.suitable_for%255B%255D%3DFusion%2BWear&otracker=nmenu_sub_Women_0_Ethnic+Trousers&page={}',
    'https://www.flipkart.com/clothing-and-accessories/saree-and-accessories/petticoat/women-petticoat/pr?sid=clo%2C8on%2Ctpo%2Ctuw&otracker=categorytree&otracker=nmenu_sub_Women_0_Saree+Shapewear+%26+Petticoats&page={}',
    'https://www.flipkart.com/clothing-and-accessories/bottomwear/jeans/women-jeans/pr?sid=clo%2Cvua%2Ck58%2C4hp&otracker=categorytree&otracker=nmenu_sub_Women_0_Jeans&page={}',
    'https://www.flipkart.com/clothing-and-accessories/dresses-and-gown/dress/women-dress/pr?sid=clo%2Codx%2Cmaj%2Cjhy&otracker=categorytree&otracker=nmenu_sub_Women_0_Dresses&page={}',
    'https://www.flipkart.com/clothing-and-accessories/topwear/pr?sid=clo%2Cash&p%5B%5D=facets.ideal_for%255B%255D%3DWomen&p%5B%5D=facets.ideal_for%255B%255D%3Dwomen&otracker=categorytree&otracker=nmenu_sub_Women_0_Topwear&page={}',
    'https://www.flipkart.com/clothing-and-accessories/topwear/tshirt/men-tshirt/pr?sid=clo%2Cash%2Cank%2Cedy&otracker=categorytree&otracker=nmenu_sub_Men_0_T-Shirts&page={}',
    'https://www.flipkart.com/clothing-and-accessories/topwear/shirt/men-shirt/formal-shirt/pr?sid=clo%2Cash%2Caxc%2Cmmk%2Cbk1&otracker=categorytree&otracker=nmenu_sub_Men_0_Formal+Shirts&page={}',
    'https://www.flipkart.com/clothing-and-accessories/topwear/shirt/men-shirt/casual-shirt/pr?sid=clo%2Cash%2Caxc%2Cmmk%2Ckp7&otracker=categorytree&otracker=nmenu_sub_Men_0_Casual+Shirts&page={}',
    'https://www.flipkart.com/clothing-and-accessories/bottomwear/jeans/men-jeans/pr?sid=clo%2Cvua%2Ck58%2Ci51&otracker=categorytree&otracker=nmenu_sub_Men_0_Jeans&page={}',
    'https://www.flipkart.com/mens-clothing/trousers/pr?sid=2oq%2Cs9b%2C9uj&otracker=nmenu_sub_Men_0_Casual+Trousers&page={}',
    'https://www.flipkart.com/clothing-and-accessories/bottomwear/trouser/men-trouser/pr?sid=clo%2Cvua%2Cmle%2Clhk&otracker=categorytree&p%5B%5D=facets.occasion%255B%255D%3DFormal&otracker=nmenu_sub_Men_0_Formal+Trousers&page={}',
    'https://www.flipkart.com/clothing-and-accessories/bottomwear/track-pants/men-track-pants/pr?sid=clo%2Cvua%2Cjlk%2C6ql&otracker=categorytree&otracker=nmenu_sub_Men_0_Track+pants&page={}',
    'https://www.flipkart.com/clothing-and-accessories/bottomwear/cargo/men-cargo/pr?sid=clo%2Cvua%2Crqy%2Cnli&otracker=categorytree&otracker=nmenu_sub_Men_0_Cargos&page={}',
    'https://www.flipkart.com/clothing-and-accessories/kurtas-ethnic-sets-and-bottoms/pr?sid=clo%2Ccfv&otracker=categorytree&p%5B%5D=facets.ideal_for%255B%255D%3DBoys&p%5B%5D=facets.ideal_for%255B%255D%3DBoys%2B%2526%2BGirls&p%5B%5D=facets.ideal_for%255B%255D%3DBaby%2BBoys%2B%2526%2BBaby%2BGirls&otracker=nmenu_sub_Baby+%26+Kids_0_Ethnic+Wear&page={}',
    'https://www.flipkart.com/clothing-and-accessories/topwear/shirt/kids-shirt/pr?sid=clo%2Cash%2Caxc%2Cznf&otracker=categorytree&p%5B%5D=facets.ideal_for%255B%255D%3DBoys&otracker=nmenu_sub_Baby+%26+Kids_0_Shirts&page={}',
    'https://www.flipkart.com/clothing-and-accessories/bottomwear/shorts/pr?sid=clo%2Cvua%2Ce8g&p%5B%5D=facets.ideal_for%255B%255D%3DBoys&otracker=categorytree&p%5B%5D=facets.ideal_for%255B%255D%3DBoys%2B%2526%2BGirls&p%5B%5D=facets.ideal_for%255B%255D%3DBaby%2BBoys%2B%2526%2BBaby%2BGirls&otracker=nmenu_sub_Baby+%26+Kids_0_Shorts&page={}',
    "https://www.flipkart.com/clothing-and-accessories/ethnic-wear/pr?sid=clo%2Ccfv&p%5B%5D=facets.ideal_for%255B%255D%3DGirls&p%5B%5D=facets.ideal_for%255B%255D%3DBoys%2B%2526%2BGirls&p%5B%5D=facets.ideal_for%255B%255D%3DBaby%2BBoys%2B%2526%2BBaby%2BGirls&p%5B%5D=facets.ideal_for%255B%255D%3DBaby%2BGirls&otracker=categorytree&otracker=nmenu_sub_Baby+%26+Kids_0_Ethnic+Wear&page={}",
    'https://www.flipkart.com/clothing-and-accessories/dresses-and-gown/dress/kids-dress/pr?sid=clo%2Codx%2Cmaj%2Czc1&otracker=categorytree&otracker=nmenu_sub_Baby+%26+Kids_0_Dresses+%26+Skirts&page={}',
    'https://www.flipkart.com/clothing-and-accessories/topwear/pr?sid=clo%2Cash&p%5B%5D=facets.ideal_for%255B%255D%3DGirls&p%5B%5D=facets.ideal_for%255B%255D%3DBoys%2B%2526%2BGirls&p%5B%5D=facets.ideal_for%255B%255D%3DBaby%2BBoys%2B%2526%2BBaby%2BGirls&p%5B%5D=facets.ideal_for%255B%255D%3DBaby%2BGirls&otracker=categorytree&otracker=nmenu_sub_Baby+%26+Kids_0_T-shirts+%26+Tops&page={}'
    
]
products = []
for i in base_urls:

  for page in range(1, 11):  # Scraping pages 1 to 10
      url = i.format(page)
      response = requests.get(url)
      html_content = response.text
      soup = BeautifulSoup(html_content, "html.parser")

      product_cards = soup.find_all("div", class_="_1AtVbE")

      for card in product_cards:
          name_elem = card.find("a", class_="IRpwTa")
          if name_elem:
              name = name_elem.text.strip()
              url = "https://www.flipkart.com" + name_elem["href"]
              products.append({
                  "Product Name": name,
                  "Product URL": url
              })

  df_flipkart = pd.DataFrame(products)

urls = ["https://www.shopclues.com/womens-clothing-ethnic-wear-sarees.html?page={}",
        "https://www.shopclues.com/womens-ethnic-kurtis.html?page={}",
        "https://www.shopclues.com/womens-lehengas-gowns.html?page={}",
        "https://www.shopclues.com/womens-leggings-and-churidar.html?page={}",
        "https://www.shopclues.com/womens-western-wear-tops.html?page={}",
        "https://www.shopclues.com/womens-pants-and-trousers.html?page={}",
        "https://www.shopclues.com/womens-pants-and-trousers.html?page={}",
        "https://www.shopclues.com/mens-clothing-t-shirts.html?page={}",
        "https://www.shopclues.com/mens-shirts.html?page={}",
        "https://www.shopclues.com/mens-clothing-jeans.html?page={}",
        "https://www.shopclues.com/mens-sports-wear-track-pants.html?page={}",
        "https://www.shopclues.com/seasonal-winter-wear-jackets.html?page={}",
        "https://www.shopclues.com/mens-clothing-ethnic-wear.html?page={}"

]
products = []

for i in urls:
      
    for page in range(1, 10):
        url = i.format(page)
        response = requests.get(url)
        html_content = response.text
        soup = BeautifulSoup(html_content, "html.parser")

        product_containers = soup.find_all("div", class_=["column col4", "column col3"])

        for container in product_containers:
            name_elem = container.find("span", class_="prod_name")
            url_elem = container.find('a', href=True, target='_blank')

            if name_elem and url_elem:
                name = name_elem.text.strip().replace("prod_name", "").replace("mii", "")
                product_url = url_elem['href']

                products.append({
                    "Product Name": name,
                    "Product URL": product_url
                })

        df_shopclues = pd.DataFrame(products)
        #print(df)

df = pd.concat([df_flipkart,df_shopclues], ignore_index=True)
df = df.drop_duplicates().reset_index(drop=True)
df['Tags'] = df['Product Name']

def clean_text(text):
    # Remove special characters and numbers
    cleaned_text = re.sub(r'[^a-zA-Z\s]', '', text)
    # Remove extra spaces
    cleaned_text = re.sub(r'\s+', ' ', cleaned_text)
    # Convert to lowercase
    cleaned_text = cleaned_text.lower()
    return cleaned_text
df['Tags'] = df['Tags'].apply(clean_text)

### Stop words removel
import nltk
nltk.download('stopwords')
from nltk.corpus import stopwords

stop_words = set(stopwords.words('english'))  # set of English stop words

# function to remove stop words from a text
def remove_stop_words(text):
    words = text.split()
    filtered_words = [word for word in words if word.lower() not in stop_words]
    return ' '.join(filtered_words)

df['Tags'] = df['Tags'].apply(remove_stop_words)

nltk.download('punkt')
nltk.download('omw-1.4')
from nltk.stem import WordNetLemmatizer
nltk.download('wordnet')


# create an instance of WordNetLemmatizer
lemmatizer = WordNetLemmatizer()

# define a function to lemmatize a given sentence
def lemmatize_sentence(sentence):
    tokens = nltk.word_tokenize(sentence) # tokenizing the string
    lemmatized_tokens = [lemmatizer.lemmatize(token) for token in tokens]
    return ' '.join(lemmatized_tokens)

df['Tags'] = df['Tags'].apply(lemmatize_sentence)

def remove_single_letter_words(text):
    # Remove words if they consist of a single letter
    cleaned_text = re.sub(r'\b\w{1,2}\b', '', text)

    return cleaned_text
df['Tags'] = df['Tags'].apply(remove_single_letter_words)

df['Tags'] = df['Tags'].str.replace(' ', ',')
df.to_csv('data.csv')